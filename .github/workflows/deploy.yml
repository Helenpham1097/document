name: Production Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    timeout-minutes: 20
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

# Commented out to speed up the build pipeline as the gulp image optimization is taking too long.
# We will just commit the optimized assets to the repository.
#      - name: Setup Node
#        uses: actions/setup-node@v2
#        with:
#          node-version: '12'
#
#      - name: Install NPM dependencies
#        run: npm install
#
#      - name: Generate optimized assets
#        run: gulp

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Generate static site
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
        run: php please ssg:generate

      - name: Wait for previous workflows to complete (prevent race condition)
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Deploy to Webslice
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./storage/app/static
#          destination_dir: public

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-southeast-2'
          SOURCE_DIR: './storage/app/static'

#      - name: Invalidate CloudFront cache
#        uses: chetan/invalidate-cloudfront-action@master
#        env:
#          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
#          PATHS: '/*'
#          AWS_REGION: 'ap-southeast-2'
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
